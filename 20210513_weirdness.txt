dun dun dingy dingy

verse

laugh hard

slow
tow the line

dun dun dingy dingy
verse

laugh hard

slow
tow the line

end




adhd as software code
	adhd = spaghetti code, goto loops and jumps
	neurotypical = object oriented, organized
	hypothesis: adhd trainable to do object-oriented thinking?

analyze depth of code with flow
    entrypoint                       --------------------------------------------------------------------------------------------
        class                             ----------------------------------------------------------------------------------
            method                             ------------------------------------------------------
                loop                                   -------    ---          -----
                                                        -----      -            ---
                                                         ---                     -
                                                          -
fdsa
	

terminology: code complete


network AI = NODE0
have model of the way NODE1 behaves
have model of the way NODE2 behaves
have model of the way NODE3 behaves
NODE2 makes request to NODE3
NODE3 hands off information about the request to NODE0
NODE3 handles request, returns data to NODE2
NODE2 makes another request to NODE3
NODE3 hands off information about the request to NODE0
NODE0 responds that the request should be denied because NODE2 is not behaving in a manner consistent with our model of NODE2
	unless: NODE2 reports that it's acting on behalf of NODE1	
		and: this behavior is consistent with our model of how NODE1 would behave when acting through NODE2
----------------
counter security
another AI surveils the network, learning patterns of behavior of entities
hypothesizes how NODE1 would behave if acting through NODE2
	NODE1 sends a request to NODE2, encrypted with NODE1's public key it uses only for NODE2
		inside the data of the request is a piece that's encrypted with NODE1's public key it uses only for NODE3
			NODE3 decrypts the data
			checks its contents against NODE0's model of NODE1
			adds this transaction to the hash associated with NODE1
			sends packet back to NODE1 encrypted with its key that's only for NODE1, contents being the new hash that NODE3 associates with NODE1
			this is what NODE1 will send NODE3-encrypted to the request to NODE2 next time
				NODE3 keeps list of a few recent hash signatures, will accept requests signed with any of these
					suspicion of deviation from behavioral model increases with the age of the hash signature
behavior categorized by 

pattern matcher
sees a pattern
	spawns prediction maker to compare the future to prediction
		prediction maker hypothesises why observed doesn't match prediction, determines significance accordingly
	spawns an updated pattern matcher to start at time0 analyzing everything all over again

A single value can't be a pattern
two values can be a pattern
	repetition if ==
		y = 3
			test: can predict next character?
	slope if !=
		y = x
three values
	--- repetition
	/\ sin
		\/ cos
	// or \\ slope
	not sin
		/\/\ oscilation
			test: can predict next two characters?
				we saw up-down change, [4, 6, 2], [+2, -4], we predict next two characters will be [4, 0], then [2, -2], then [0, -4]...


I have this pattern model A
I'm starting at time0
I'm looking for confirmation of and/or elaboration on A
I'm also looking for pattern

    /-\
---/---\---/
        \-/
